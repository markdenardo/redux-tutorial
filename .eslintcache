[{"/Users/mdn/Desktop/skateboards/redux-tutorial/src/index.js":"1","/Users/mdn/Desktop/skateboards/redux-tutorial/src/App.js":"2","/Users/mdn/Desktop/skateboards/redux-tutorial/src/reportWebVitals.js":"3","/Users/mdn/Desktop/skateboards/redux-tutorial/src/store/index.js":"4","/Users/mdn/Desktop/skateboards/redux-tutorial/src/store/user.js":"5","/Users/mdn/Desktop/skateboards/redux-tutorial/src/store/api.js":"6"},{"size":566,"mtime":1608679352485,"results":"7","hashOfConfig":"8"},{"size":924,"mtime":1608678689479,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1608675276983,"results":"10","hashOfConfig":"8"},{"size":235,"mtime":1608694290049,"results":"11","hashOfConfig":"8"},{"size":1182,"mtime":1608694292622,"results":"12","hashOfConfig":"8"},{"size":416,"mtime":1608694287282,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1e6384e",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mdn/Desktop/skateboards/redux-tutorial/src/index.js",[],["28","29"],"/Users/mdn/Desktop/skateboards/redux-tutorial/src/App.js",["30"],"import logo from './logo.svg';\nimport './App.css';\nimport { useDispatch, useSelector } from 'react-redux'\nimport { Field, Form, Formik } from 'formik'\nimport { login, logout } from './store/user'\nfunction App() {\n  const dispatch = useDispatch()\n  const { user } = useSelector(state => state.user)\n  if (user) {\n    return (\n      <div>\n        Hi, {user.username}!\n        <button onClick={() => dispatch(logout())}>Logout</button>\n      </div>\n    )\n  }\n  return (\n    <div>\n      <Formik\n        initialValues={{ username: '', password: '' }}\n        onSubmit={(values) => { dispatch(login(values)) }}\n      >\n        {({ isSubmitting }) => (\n          <Form>\n            <Field type=\"text\" name=\"username\" />\n            <Field type=\"password\" name=\"password\" />\n            <button type=\"submit\" disabled={isSubmitting}>Login</button>\n          </Form>\n        )}\n      </Formik>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/mdn/Desktop/skateboards/redux-tutorial/src/reportWebVitals.js",[],"/Users/mdn/Desktop/skateboards/redux-tutorial/src/store/index.js",[],"/Users/mdn/Desktop/skateboards/redux-tutorial/src/store/user.js",[],"/Users/mdn/Desktop/skateboards/redux-tutorial/src/store/api.js",[],{"ruleId":"31","replacedBy":"32"},{"ruleId":"33","replacedBy":"34"},{"ruleId":"35","severity":1,"message":"36","line":1,"column":8,"nodeType":"37","messageId":"38","endLine":1,"endColumn":12},"no-native-reassign",["39"],"no-negated-in-lhs",["40"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]